import pygame
import time
import random

pygame.init()


class Blob(object):
    def __init__(self, color, radius, xspeed, yspeed, x, y, name):
        self.color = color
        self.radius = radius
        self.xspeed = xspeed
        self.yspeed = yspeed
        self.x = x
        self.y = y
        self.name = name


    def drawBlob(self):


# handles just putting the blob on the screen pygame.draw.circle(game_display, self.color, [self.x, self.y], self.radius) def checkBoundaries(self):
# standard set of if statements to make sure the blob stays on the screen if self.x >= DISPLAY_WIDTH or self.x <= 0:
        self.xspeed = -self.xspeed

        next_color = random.choice(list(colors.keys()))

        self.color = next_color

        if self.y >= DISPLAY_HEIGHT or self.y <= 0:

            self.yspeed = -self.yspeed


    def addName(self):
# handles rendering the font for pygame and creating the text rectangles font = pygame.font.Font('freesansbold.ttf', 20)
        f1 = pygame.font.Font(None, 30)
        textSurf = f1.render(self.name, True, colors['black'])
        textRect = textSurf.get_rect()
        textRect.center = (self.x, self.y)
        game_display.blit(textSurf, textRect)

    def checkBoundaries(self):
        pass


class Square(Blob):
    def init(self, color, radius, xspeed, yspeed, x, y, name):
        super().init(color, radius, xspeed, yspeed, x, y, name)
        self.color = color
        self.radius = radius
        self.xspeed = xspeed
        self.yspeed = yspeed
        self.x = x
        self.y = y
        self.name = name

blobs = []
blobName = 1
DISPLAY_WIDTH = 600

DISPLAY_HEIGHT = 600

clock = pygame.time.Clock()

FPS = 50

colors = {

    'black': (0, 0, 0),

    'white': (255, 255, 255),

    'red': (255, 0, 0),

    'green': (0, 255, 0),

    'blue': (0, 0, 255),

}

disp_color = {

    'set': (160, 180, 180)

}

game_display = pygame.display.set_mode((DISPLAY_WIDTH, DISPLAY_HEIGHT))
pygame.display.set_caption('Object')
for i in range(1):

    radius = random.randint(50, 100)
    xspeed = random.randint(1, 3)
    yspeed = random.randint(1, 10)
    xloc = random.randint(1, DISPLAY_WIDTH)
    yloc = random.randint(1, DISPLAY_HEIGHT)
    addBlob = Blob(colors['black'], radius, xspeed, yspeed, xloc, yloc, str(blobName))
    blobs.append(addBlob)
    blobName += 1
blobbing = True
while blobbing:
    game_display.ﬁll(disp_color['set'])
    for blob in blobs:
        blob.drawBlob()
    blob.addName()
    blob.x += blob.xspeed
    blob.y += blob.yspeed
    blob.checkBoundaries()
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            pygame.quit()
            quit()
    pygame.display.update()
    clock.tick(FPS)
pygame.quit()
quit()
